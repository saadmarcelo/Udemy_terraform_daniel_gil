documentacao oficial 
https://registry.terraform.io/browse/modules
https://registry.terraform.io/browse/providers
https://developer.hashicorp.com/terraform/language

terraform providers ( lista os providers q serao necessarios utilizar no codigo ) 
terraform init ( comando para iniciar e baixar os providers ) 
terraform validate ( valida se a configuracao esta valida do codigo )
terraform plan -out plan.out ( salva um binario chamado plan.out com o plano do codigo )
terraform show plan.out ( vai ler o arquivo criado anteriormente )
terraform destroy ( destroi o codigo criado )
terraform fmt ( comando para formatar o arquivos do terrform )
terraform apply ( vai aplicar o codigo )
terraform apply -destroy ( vai destruir o q havia sido criado )
terraform apply -auto-approve ( vai mosgrar o plano na tela mas ja vai dar procedimento da criacao do codigo )
terraform apply plan.out ( ele vai aplicar o plan criado anteriormente )
terraform output ( vai mostrar todos os outputs deployados )
terraform output -raw Nome_output ( vai mostrar o valor somente do output selecionado )
terraform show plan.out ( vai mostrar o resultado do plano )
terraform show ( vai mostrar de forma legivel as informações do objetos criados )
terrform state list ( lista os recursos que estao no state)

caso queria mudar o nome de um recurso sem destruir e recriar o recurso 
vamos mudar o nome bucket_1 para bucket_um na pastas show-state-import/bucket.tf
terraform state mv aws_s3_bucket.bucket_1 aws_s3_bucket.um  

terraform state pull ( baixa do remote state )
terraform state pull > state.tfstate


terraform state push -force state.tfstate ( vai subir para o remote state e sobrescrever pelo remote state que haviamos salvo localmente e forçar )

terraform state replace-provider registry.terraform.io/hashicorp/aws registry.terraform.io/hashicorp/aws-v2 ( vai mudar no tfstate o provider )

terraform state show aws_s3_bucket.bucket_2 ( mostra as informações somente do objeto mencionado )

caso queira remover do state um recurso mas nao apagar ele da aws podemos fazer o seguinte
remover do show-state-import/bucket.tf o resource bucket_1
e apagar do state
terraform state rm aws_s3_bucket.bucket_um 

isso vai remover do state e quando formos dar o terraform plan ( o recurso na aws nao será destruido )

terraform import (importa para o tfstate um recurso ja criado na aws, é necessario q ja tenha o codigo de como criar o recurso importado no codigo )

terraform import aws_s3_bucket.bucket_um marcelosaad-terraform-commands-1 ( nome do recuros importado e o nome do bucket )

terraform init -reconfigure ( criar um novo backend zerado )
terraform force-unlock ID ( id do lock bloqueado )
